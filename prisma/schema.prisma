// File: prisma/schema.prisma (Final Version with Purchase Order)

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ===============================================
//  Enum: OrderStatus (สถานะของบิล)
// ===============================================
enum OrderStatus {
  COMPLETED // ขายสำเร็จ (จ่ายเงินสด)
  CREDIT    // ขายเชื่อ (รอชำระเงิน)
  HELD      // พักบิล
  CANCELLED // ยกเลิก
}

// ===============================================
//  Model: PurchaseOrder (ใบสั่งซื้อ/ใบรับของ)
// ===============================================
model PurchaseOrder {
  id          Int                 @id @default(autoincrement())
  poNumber    String              @unique // เลขที่ใบรับของ
  notes       String?             @db.Text
  totalCost   Decimal               // ต้นทุนรวม
  createdAt   DateTime            @default(now())

  // ความสัมพันธ์กับผู้ขาย
  supplier    Supplier            @relation(fields: [supplierId], references: [id])
  supplierId  Int

  // รายการสินค้าในใบรับของ
  items       PurchaseOrderItem[]
}

// ===============================================
//  Model: PurchaseOrderItem (รายการสินค้าในใบรับของ)
// ===============================================
model PurchaseOrderItem {
  id              Int           @id @default(autoincrement())
  quantity        Int           // จำนวนที่รับเข้า
  costPrice       Decimal         // ต้นทุนต่อหน่วย ณ ตอนที่รับ
  
  // ความสัมพันธ์กับใบรับของ
  purchaseOrder   PurchaseOrder @relation(fields: [purchaseOrderId], references: [id])
  purchaseOrderId Int

  // ความสัมพันธ์กับสินค้า
  product         Product       @relation(fields: [productId], references: [id])
  productId       Int
}


// ===============================================
//  Model: Supplier (ข้อมูลผู้ขาย)
// ===============================================
model Supplier {
  id             Int             @id @default(autoincrement())
  code           String          @unique
  name           String
  taxId          String?
  phone          String?
  fax            String?
  email          String?
  address        String?         @db.Text
  notes          String?         @db.Text
  creditDays     Int?
  paymentTerms   String?
  imageUrl       String?
  products       Product[]
  purchaseOrders PurchaseOrder[] // ความสัมพันธ์กับ PurchaseOrder
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

// ===============================================
//  Model: Customer (ข้อมูลลูกค้า/สมาชิก)
// ===============================================
model Customer {
  id                   Int       @id @default(autoincrement())
  memberCode           String    @unique
  title                String?
  firstName            String
  lastName             String?
  nationalId           String?   @unique
  phone                String?
  email                String?
  dateOfBirth          DateTime?
  taxId                String?
  creditLimit          Decimal?
  address              String?   @db.Text
  shippingAddress      String?   @db.Text
  notes                String?   @db.Text
  imageUrl             String?
  membershipExpiryDate DateTime?
  orders               Order[]
  billingNotes         BillingNote[]
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
}

// ===============================================
//  Model: Product (ข้อมูลสินค้า)
// ===============================================
model Product {
  id                 Int                   @id @default(autoincrement())
  name               String
  alias              String?
  barcode            String?               @unique
  category           String?
  unit               String?
  costPrice          Decimal
  retailPrice        Decimal
  wholesalePrice     Decimal?
  vatType            String?
  stockQuantity      Int                   @default(0)
  trackStock         Boolean               @default(true)
  reorderPoint       Int?
  purchaseLimit      Int?
  shelfLocation      String?
  expiryDate         DateTime?
  points             Int?
  notes              String?               @db.Text
  imageUrl           String?
  allowPriceEdit     Boolean               @default(false)
  supplier           Supplier              @relation(fields: [supplierId], references: [id])
  supplierId         Int
  OrderItems         OrderItem[]
  purchaseOrderItems PurchaseOrderItem[] // ความสัมพันธ์กับ PurchaseOrderItem
  returns            ReturnItem[]
  createdAt          DateTime              @default(now())
  updatedAt          DateTime              @updatedAt
  @@fulltext([name, alias, barcode])
}

// ===============================================
//  Model: Order (ข้อมูลบิลการขาย)
// ===============================================
model Order {
  id              Int               @id @default(autoincrement())
  orderNumber     String            @unique
  total           Decimal
  received        Decimal?            // <-- [เพิ่ม] เงินที่รับ
  change          Decimal?            // <-- [เพิ่ม] เงินทอน
  status          OrderStatus       @default(COMPLETED)
  createdAt       DateTime          @default(now())
  customer        Customer?         @relation(fields: [customerId], references: [id])
  customerId      Int?
  items           OrderItem[]
  billingNoteItem BillingNoteItem?
  returns         ProductReturn[] // <--- [เพิ่มบรรทัดนี้]
}

// ===============================================
//  Model: OrderItem (รายการสินค้าในบิล)
// ===============================================
model OrderItem {
  id               Int     @id @default(autoincrement())
  quantity         Int
  price            Decimal
  discount         Decimal   @default(0)
  order            Order   @relation(fields: [orderId], references: [id])
  orderId          Int
  product          Product @relation(fields: [productId], references: [id])
  productId        Int
  returnedQuantity Int     @default(0) // <--- [เพิ่มบรรทัดนี้]
}
// ===============================================
// [เพิ่มใหม่] ตารางสำหรับเก็บข้อมูล "หัวบิล" การรับคืน
// ===============================================
model ProductReturn {
  id                Int      @id @default(autoincrement())
  originalOrderId   Int      // ID ของบิลขายต้นฉบับ
  totalRefundAmount Decimal  // ยอดเงินที่คืนทั้งหมดในครั้งนี้
  reason            String?  // เหตุผลการคืน (ถ้ามี)
  createdAt         DateTime @default(now())

  originalOrder Order        @relation(fields: [originalOrderId], references: [id], onDelete: Cascade)
  items         ReturnItem[]

  @@map("product_returns")
}

// ===============================================
// [เพิ่มใหม่] ตารางสำหรับเก็บ "รายการสินค้า" ที่รับคืน
// ===============================================
model ReturnItem {
  id              Int     @id @default(autoincrement())
  productReturnId Int     // ID ของหัวบิลการคืน
  productId       Int     // ID ของสินค้า
  quantity        Int     // จำนวนที่คืน
  priceAtReturn   Decimal // ราคาต่อหน่วย ณ ตอนที่คืน (ดึงจากบิลเก่า)

  productReturn ProductReturn @relation(fields: [productReturnId], references: [id], onDelete: Cascade)
  product       Product       @relation(fields: [productId], references: [id])

  @@map("return_items")
}

// ===============================================
//  Models สำหรับ Authentication (Lucia Auth)
// ===============================================
model User {
  id        String    @id
  username  String    @unique
  password  String
  role      String    @default("USER")
  sessions  Session[]
}

model Session {
  id        String   @id
  expiresAt DateTime
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// ===============================================
//  [เพิ่มใหม่] Model: BillingNote (ใบวางบิล/ใบแจ้งหนี้)
// ===============================================
model BillingNote {
  id          Int               @id @default(autoincrement())
  bnNumber    String            @unique // เลขที่ใบวางบิล
  totalAmount Decimal             // ยอดรวมของใบวางบิล
  createdAt   DateTime          @default(now())

  // ความสัมพันธ์กับลูกค้า
  customer    Customer          @relation(fields: [customerId], references: [id])
  customerId  Int

  // รายการบิลที่อยู่ในใบวางบิลนี้
  items       BillingNoteItem[]
}

// ===============================================
//  [เพิ่มใหม่] Model: BillingNoteItem (รายการบิลในใบวางบิล)
// ===============================================
model BillingNoteItem {
  id            Int         @id @default(autoincrement())

  // ความสัมพันธ์กับใบวางบิล
  billingNote   BillingNote @relation(fields: [billingNoteId], references: [id])
  billingNoteId Int

  // ความสัมพันธ์กับบิลเดิม
  order         Order       @relation(fields: [orderId], references: [id])
  orderId       Int         @unique // 1 บิล สามารถอยู่ในใบวางบิลได้แค่ 1 ใบ
}